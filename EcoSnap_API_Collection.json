{
  "info": {
    "name": "EcoSnap API Collection",
    "description": "Complete API collection for EcoSnap waste detection platform",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "ai_service_url",
      "value": "http://localhost:5001",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "report_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    pm.collectionVariables.set('user_id', response.user.id);",
                  "    pm.test('Registration successful', function () {",
                  "        pm.expect(response.message).to.include('created successfully');",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    pm.collectionVariables.set('user_id', response.user.id);",
                  "    pm.test('Login successful', function () {",
                  "        pm.expect(response.message).to.include('successful');",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"updateduser\",\n  \"location\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Reports",
      "item": [
        {
          "name": "Upload and Detect Waste",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": "/path/to/waste-image.jpg"
                },
                {
                  "key": "latitude",
                  "value": "40.7128",
                  "type": "text"
                },
                {
                  "key": "longitude",
                  "value": "-74.0060",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "Plastic waste found near park entrance",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/reports/detect",
              "host": ["{{base_url}}"],
              "path": ["reports", "detect"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('report_id', response.report.id);",
                  "    pm.test('Report created successfully', function () {",
                  "        pm.expect(response.message).to.include('successfully');",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get My Reports",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/reports/my-reports?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["reports", "my-reports"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Nearby Reports",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/reports/nearby?latitude=40.7128&longitude=-74.0060&radius=5",
              "host": ["{{base_url}}"],
              "path": ["reports", "nearby"],
              "query": [
                {
                  "key": "latitude",
                  "value": "40.7128"
                },
                {
                  "key": "longitude",
                  "value": "-74.0060"
                },
                {
                  "key": "radius",
                  "value": "5"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Report by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/reports/{{report_id}}",
              "host": ["{{base_url}}"],
              "path": ["reports", "{{report_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Like Report",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/reports/{{report_id}}/like",
              "host": ["{{base_url}}"],
              "path": ["reports", "{{report_id}}", "like"]
            }
          },
          "response": []
        },
        {
          "name": "Add Comment to Report",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"comment\": \"Great work on reporting this waste! This area needs attention.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/reports/{{report_id}}/comment",
              "host": ["{{base_url}}"],
              "path": ["reports", "{{report_id}}", "comment"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get User Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/stats",
              "host": ["{{base_url}}"],
              "path": ["users", "stats"]
            }
          },
          "response": []
        },
        {
          "name": "Get Leaderboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/leaderboard?type=points&limit=10",
              "host": ["{{base_url}}"],
              "path": ["users", "leaderboard"],
              "query": [
                {
                  "key": "type",
                  "value": "points"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get All Badges",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/badges",
              "host": ["{{base_url}}"],
              "path": ["users", "badges"]
            }
          },
          "response": []
        },
        {
          "name": "Get Badge Progress",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/badges/progress",
              "host": ["{{base_url}}"],
              "path": ["users", "badges", "progress"]
            }
          },
          "response": []
        },
        {
          "name": "Search Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/search?q=test&limit=10",
              "host": ["{{base_url}}"],
              "path": ["users", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "test"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "AI Service",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{ai_service_url}}/health",
              "host": ["{{ai_service_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "Detect Waste from URL",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"image_url\": \"https://example.com/waste-image.jpg\"\n}"
            },
            "url": {
              "raw": "{{ai_service_url}}/api/detect",
              "host": ["{{ai_service_url}}"],
              "path": ["api", "detect"]
            }
          },
          "response": []
        },
        {
          "name": "Detect Waste from Upload",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": "/path/to/waste-image.jpg"
                }
              ]
            },
            "url": {
              "raw": "{{ai_service_url}}/api/detect/upload",
              "host": ["{{ai_service_url}}"],
              "path": ["api", "detect", "upload"]
            }
          },
          "response": []
        },
        {
          "name": "Train Model",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{ai_service_url}}/api/train",
              "host": ["{{ai_service_url}}"],
              "path": ["api", "train"]
            }
          },
          "response": []
        },
        {
          "name": "Get Model Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{ai_service_url}}/api/model/info",
              "host": ["{{ai_service_url}}"],
              "path": ["api", "model", "info"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Health Checks",
      "item": [
        {
          "name": "Backend Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/../health",
              "host": ["{{base_url}}"],
              "path": ["..", "health"]
            }
          },
          "response": []
        },
        {
          "name": "AI Service Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{ai_service_url}}/health",
              "host": ["{{ai_service_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-set authorization header if token exists",
          "const token = pm.collectionVariables.get('auth_token');",
          "if (token && !pm.request.headers.has('Authorization')) {",
          "    pm.request.headers.add({",
          "        key: 'Authorization',",
          "        value: `Bearer ${token}`",
          "    });",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test for response time",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Global test for status code",
          "pm.test('Status code is not 500', function () {",
          "    pm.expect(pm.response.code).to.not.equal(500);",
          "});"
        ]
      }
    }
  ]
}
